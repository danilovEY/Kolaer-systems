group 'ru.kolaer'
version '0.0.1'

def name = "kolaer-web"
def testName = "kolaer-web-test.war"
def nameWarFile = name + ".war"

apply plugin: 'groovy'

dependencies {
    compile project(":api")
    compile "ch.qos.logback:logback-classic:1.1.3"
    compile "javax.servlet:javax.servlet-api:3.1.0"
    compile "javax.servlet:jstl:1.2"
    compile "org.codehaus.groovy:groovy-all:2.4.6"
    compile "org.springframework.boot:spring-boot-starter-web:1.3.6.RELEASE"
    compile "org.springframework.boot:spring-boot-starter-security:1.3.6.RELEASE"
    compile "org.springframework:spring-context-support:4.3.1.RELEASE"
    compile "org.hibernate:hibernate-entitymanager:5.0.1.Final"
    compile "org.springframework:spring-orm:4.3.1.RELEASE"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-hibernate5:2.8.1"
    compile "mysql:mysql-connector-java:5.1.38"
}

war {
    archiveName = nameWarFile
    baseName = name
    webXml = file('src/main/webapp/WEB-INF/web.xml')
}

task renameProject(type: Copy) {
    war.setArchiveName(testName)
}

task renameResources(dependsOn: processResources) {
    doLast{
        file("build/resources/main/database.properties").delete()
        file("build/resources/main/origin_database.properties").renameTo("build/resources/main/database.properties")
    }
}

task buildApp(dependsOn: [clean, renameResources, war]) {
    doLast {
        copy {
            from 'build/libs/' + nameWarFile
            into deployServerPath
        }
    }
}

task buildAppForTest(dependsOn: [clean, war, renameProject]) {
    doLast {
        copy {
            from 'build/libs/' + testName
            into deployServerPath
        }
    }
}