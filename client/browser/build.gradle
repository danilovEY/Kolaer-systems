group 'ru.kolaer'
version '0.0.3'

def projectName = "ru.kolaer.browser"
def projectNameWithVersion = projectName + "-" + version
def projectJarName = projectNameWithVersion + ".jar"

apply plugin: 'osgi'


repositories {
    maven {
        url "http://maven.teamdev.com/repository/products"
    }
}

dependencies {
    compile "com.teamdev.jxbrowser:jxbrowser:5.4.3"
}

jar {
    archiveName = projectJarName
    baseName = project.name
    manifest {
        name = 'Браузер'
        symbolicName = projectName
        instruction "Bundle-ClassPath", "."
        instruction "Export-Package", "com.teamdev.jxbrowser.chromium.events","com.teamdev.jxbrowser.chromium.javafx",
                "com.teamdev.jxbrowser.chromium"
        instruction "Import-Package", "com.teamdev.jxbrowser.chromium","com.teamdev.jxbrowser.chromium.events",
                "com.teamdev.jxbrowser.chromium.javafx","javafx.application","javafx.collections","javafx.event",
                "javafx.geometry","javafx.scene","javafx.scene.control","javafx.scene.image","javafx.scene.input",
                "javafx.scene.layout","javafx.stage","javafx.util","javax.swing","org.slf4j","ru.kolaer.api.plugins",
                "ru.kolaer.api.plugins.services","ru.kolaer.api.system","ru.kolaer.api.tools","javafx.beans.property",
                "javafx.beans.value","javafx.scene.canvas"
    }
}

task createJar(type: Jar) {
    archiveName = projectJarName
    baseName = project.name
    manifest = jar.manifest
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

task copyJarToBin(dependsOn: createJar) {
    doLast {
        copy {
            from 'build/libs/' + projectJarName
            into pathToProjectDirWithPlugins
        }
    }
}

task buildApp(dependsOn : [clean, copyJarToBin])